---
- name: Create system group
  ansible.builtin.group:
    name: "{{ traefik_system_group }}"
    system: true
    state: present
  when: traefik_system_group != "root"
  become: true
  tags: traefik

- name: Create system user
  ansible.builtin.user:
    name: "{{ traefik_system_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ traefik_system_group }}"
    createhome: false
  when: traefik_system_user != "root"
  become: true
  tags: traefik

- name: Create configuration and data directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ traefik_system_user }}"
    group: "{{ traefik_system_group }}"
    mode: 0755
  with_items:
    - "{{ traefik_config_dir }}"
    - "{{ traefik_config_dir }}/rules"
    - "/var/log/traefik"
  become: true
  tags: traefik

- name: Create acme directory
  ansible.builtin.file:
    path: "{{ traefik_config_dir }}/acme"
    state: directory
    owner: "{{ traefik_system_user }}"
    group: "{{ traefik_system_group }}"
    mode: 0700
  become: true
  tags: traefik

- name: Copy logrotate rule
  ansible.builtin.template:
    src: "traefik.logrotate.j2"
    dest: "/etc/logrotate.d/traefik"
    owner: "root"
    group: "root"
    mode: 0644
  tags:
    - traefik
    - alertrules

- name: Check if traefik is installed
  ansible.builtin.stat:
    path: "{{ traefik_binary_install_dir }}/traefik"
  register: __traefik_is_installed
  become: true
  tags: traefik

- name: Gather currently installed traefik version (if any)
  ansible.builtin.command: "{{ traefik_binary_install_dir }}/traefik version"
  changed_when: false
  register: __traefik_current_version_output
  when: __traefik_is_installed.stat.exists
  become: true
  tags: traefik

- name: Download binary to local folder
  ansible.builtin.get_url:
    url: "https://github.com/traefik/traefik/releases/download/v{{ traefik_version }}/traefik_v{{ traefik_version }}_linux_{{ go_arch }}.tar.gz"
    dest: "/tmp/traefik-{{ traefik_version }}.linux-{{ go_arch }}.tar.gz"
    mode: "0644"
  environment: "{{ proxy_env }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  check_mode: false
  become: true
  tags: traefik
  when: (not __traefik_is_installed.stat.exists) or (__traefik_current_version_output.stdout_lines[0].split(" ")[1] != traefik_version)

- name: Unpack binaries
  ansible.builtin.unarchive:
    src: "/tmp/traefik-{{ traefik_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp"
    remote_src: true
  check_mode: false
  become: true
  tags: traefik
  when: (not __traefik_is_installed.stat.exists) or (__traefik_current_version_output.stdout_lines[0].split(" ")[1] != traefik_version)
  
- name: Propagate binaries
  ansible.builtin.copy:
    src: "/tmp/traefik"
    dest: "{{ traefik_binary_install_dir }}/traefik"
    mode: 0755
    owner: root
    group: root
    remote_src: true
  notify: Restart traefik
  become: true
  tags: traefik
  when: (not __traefik_is_installed.stat.exists) or (__traefik_current_version_output.stdout_lines[0].split(" ")[1] != traefik_version)

- name: Generate config file
  ansible.builtin.copy:
    content: "{{ traefik_config | to_nice_yaml(indent=2, sort_keys=False) }}\n"
    dest: "{{ traefik_config_dir }}//config.yml"
    owner: "{{ traefik_system_user }}"
    group: "{{ traefik_system_group }}"
    mode: 0644
  notify: Reload traefik
  become: true
  tags:
    - traefik
    - traefik_config

- name: Generate rules config files
  ansible.builtin.copy:
    content: "{{ item.content | to_nice_yaml(indent=2, sort_keys=False) }}\n"
    dest: "{{ traefik_config_dir }}//rules/{{ item.name }}.yml"
    owner: "{{ traefik_system_user }}"
    group: "{{ traefik_system_group }}"
    mode: 0644
  with_items: "{{ traefik_rules_config }}"
  become: true
  tags:
    - traefik
    - traefik_config

- name: Copy defined custom rules *.rule from files folder
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ traefik_config_dir }}/rules/"
    owner: "{{ traefik_system_user }}"
    group: "{{ traefik_system_group }}"
    mode: 0644
  with_fileglob: "*.yml"
  when: traefik_copy_default_rules
  become: true
  tags:
    - traefik
    - traefik_config

- name: Check if acme.json exists
  ansible.builtin.stat:
    path: "{{ traefik_config_dir }}/acme/acme.json"
  register: __acme_json_exists
  become: true
  tags: traefik

- name: Touch acme.json if not exists
  ansible.builtin.file:
    path: "{{ traefik_config_dir }}/acme/acme.json"
    state: touch
    owner: "{{ traefik_system_user }}"
    group: "{{ traefik_system_group }}"
    mode: 0600
  when: (not __acme_json_exists.stat.exists)
  become: true
  tags: traefik

- name: Create systemd service unit
  ansible.builtin.template:
    src: traefik.service.j2
    dest: /etc/systemd/system/traefik.service
    owner: root
    group: root
    mode: 0644
  notify: Restart traefik
  become: true
  tags: traefik

- name: Ensure service is started and enabled
  ansible.builtin.systemd:
    name: traefik
    state: reloaded
    enabled: yes
  become: true
  tags: traefik
